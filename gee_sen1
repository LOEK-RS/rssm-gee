var aoi = ee.FeatureCollection("projects/europeat/assets/amtsvenn");


var sen1vvvh = function(image){
  
  var diff = image.select("VV").subtract(image.select("VH")).rename("VVsubVH")
  var rati = image.select("VV").divide(image.select("VH")).rename("VVdivVH")
  
  return image.addBands(diff).addBands(rati)
  
}



var sen1 = ee.ImageCollection("COPERNICUS/S1_GRD")
  .filterBounds(aoi)
  .filterDate('2020-01-01' , '2021-01-08')
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', "VV"))
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', "VH"))
  .filter(ee.Filter.eq('instrumentMode', 'IW'))
  .filterMetadata('resolution_meters', 'equals' , 10)
  .select("VV", "VH")
  .map(sen1vvvh)
  .toBands();

print(sen1)



// nice chart


// https://developers.google.com/earth-engine/guides/charts_image_collection
var sen1VV = ee.ImageCollection("COPERNICUS/S1_GRD")
  .filterBounds(aoi)
  .filterDate('2020-01-01' , '2021-01-08')
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', "VV"))
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', "VH"))
  .filter(ee.Filter.eq('instrumentMode', 'IW'))
  .filterMetadata('resolution_meters', 'equals' , 10)
  .select("VV", "VH")
  .map(sen1vvvh);

var chart =
    ui.Chart.image
        .series({
          imageCollection: sen1VV,
          region: aoi,
          reducer: ee.Reducer.mean(),
          scale: 10,
          xProperty: 'system:time_start'
        })
        .setSeriesNames(['VV', 'VH', "VV-VH", "VV/VH"])
        .setOptions({
          title: 'Radar TS',
          hAxis: {title: 'Date', titleTextStyle: {italic: false, bold: true}},
          vAxis: {
            title: 'Backscatter',
            titleTextStyle: {italic: false, bold: true}
          },
          lineWidth: 5,
          colors: ['e37d05', '1d6b99', 'ff0033', 'aa1516'],
          curveType: 'function'
        });
print(chart);



// Anzeigen auf Karte

Map.addLayer(sen1VV,{} , "Sentinel 1")


Export.image.toDrive({
  
  
  
})


